# basic 3-tier architecture with dependencies between web server, app server, and database server
# web server generates access logs
# app server generates info logs after web server access events
# database server generates query logs after app server info events

start_time: "2024-12-09T10:00:00Z"
end_time: "2024-12-09T11:00:00Z"

response_time:
  min: 100
  max: 5000

acceptable_values:
  method: ['GET', 'POST', 'PUT', 'DELETE']
  path: ['/api/v1/users', '/api/v1/orders', '/api/v1/products', '/health', '/metrics']
  protocol: ['HTTP/1.1', 'HTTP/2.0']
  status: [200, 201, 400, 401, 403, 404, 500]
  user_agent: [
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
    'Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15'
  ]
  referer: ['-', 'https://example.com', 'https://google.com']
  level: ['INFO', 'WARNING', 'ERROR', 'DEBUG']
  service: ['auth-service', 'payment-service', 'inventory-service', 'user-service']
  operation: ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'JOIN']
  table: ['users', 'orders', 'products', 'categories', 'payments']

sources:
  web_server:
    description: "Apache HTTP Server 2.4.62"
    attributes:
      method:
        type: "choice"
        values: ['GET', 'POST', 'PUT', 'DELETE']
      path:
        type: "choice"
        values: ['/api/v1/users', '/api/v1/orders', '/api/v1/products', '/health', '/metrics']
      protocol:
        type: "choice"
        values: ['HTTP/1.1', 'HTTP/2.0']
      status:
        type: "choice"
        values: [200, 201, 400, 401, 403, 404, 500]
      bytes:
        type: "integer"
        min: 500
        max: 5000
      client_ip:
        type: "string"
        generator: "client_ip"
      user_agent:
        type: "choice"
        values: [
          'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36',
          'Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15'
        ]
      referer:
        type: "choice"
        values: ['-', 'https://example.com', 'https://google.com']
      response_time:
        type: "integer"
        min: 100
        max: 5000
    volume:
      - pattern: "24/7"
        count: 1000
        distribution: "gaussian"
        details: {}
    event_types:
      - type: "access"
        format: "{client_ip} - - [{timestamp}] \"{method} {path} {protocol}\" {status} {bytes} \"{referer}\" \"{user_agent}\""
        create_from_scratch: true

  app_server:
    description: "Express.js 4.17.1"
    attributes:
      level:
        type: "choice"
        values: ['INFO', 'WARNING', 'ERROR', 'DEBUG']
      service:
        type: "choice"
        values: ['auth-service', 'payment-service', 'inventory-service', 'user-service']
      response_time:
        type: "integer"
        min: 100
        max: 5000
    volume: []
    event_types:
      - type: "info"
        format: "[{timestamp}] {level} [{service}] - Request processed in {response_time}ms"
        create_from_scratch: false

  database_server:
    description: "MySQL 8.0.26"
    attributes:
      operation:
        type: "choice"
        values: ['SELECT', 'INSERT', 'UPDATE', 'DELETE', 'JOIN']
      table:
        type: "choice"
        values: ['users', 'orders', 'products', 'categories', 'payments']
      duration:
        type: "integer"
        min: 1
        max: 1000
    volume: []
    event_types:
      - type: "query"
        format: "[{timestamp}] {operation} on {table} completed in {duration}ms"
        create_from_scratch: false

dependencies:
  - trigger:
      source: "web_server"
      event_type: "access"
    action:
      source: "app_server"
      event_type: "info"
  - trigger:
      source: "app_server"
      event_type: "info"
    action:
      source: "database_server"
      event_type: "query"

event_frequencies:
  normal_traffic:
    web_server:
      access:
        frequency: "60 per minute"
    app_server:
      info:
        frequency: "30 per minute"
      error:
        frequency: "1 per minute"
    database_server:
      query:
        frequency: "45 per minute"
      connection:
        frequency: "1 per hour"